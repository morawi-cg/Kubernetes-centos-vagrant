!/bin/bash

sudo firewall-cmd --permanent --add-port=6443/tcp
# weave network specific network implementation
sudo firewall-cmd --permanent --add-port=6783/tcp
sudo firewall-cmd --permanent --add-port=6783/udp
sudo firewall-cmd --permanent --add-port=6784/tcp
sudo firewall-cmd --permanent --add-port=6784/udp
sudo firewall-cmd --permanent --add-port=2379-2380/tcp
sudo firewall-cmd --permanent --add-port=10248/tcp
sudo firewall-cmd --permanent --add-port=10248/udp
sudo firewall-cmd --permanent --add-port=10250/tcp
sudo firewall-cmd --permanent --add-port=10251/tcp
sudo firewall-cmd --permanent --add-port=10252/tcp
sudo firewall-cmd --permanent --add-port=10255/tcp
sudo setenforce 0
sudo sed -i ‘s/^SELINUX=enforcing$/SELINUX=permissive/’ /etc/selinux/config
sudo sed -i '/swap/d' /etc/fstab
modprobe br_netfilter
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
sudo swapoff -a
sudo firewall-cmd --reload

# 2nd stage:
cat <<SHELLMASTER >> /etc/sysctl.d/99-sysctl.conf
  net.bridge.bridge-nf-call-ip6tables = 1
  net.bridge.bridge-nf-call-iptables = 1
  net.ipv6.conf.all.disable_ipv6 = 1
  net.ipv6.conf.default.disable_ipv6 = 1
SHELLMASTER
sysctl --system

# 3rd stage

cat <<EOFA > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOFA


yum -y install kubeadm kubelet kubectl

# 4th stage

sudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine

sudo yum install -y yum-utils device-mapper-persistent-data lvm2
sudo yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install docker-ce docker-ce-cli containerd.io
## Create /etc/docker directory.
mkdir /etc/docker

# Setup daemon.
cat  > /etc/docker/daemon.json <<EOF1
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF1

echo "#plugins_cri_systemd_cgroup = true" >> /etc/containerd/config.toml

mkdir -p /etc/systemd/system/docker.service.d
sudo systemctl enable docker
sudo systemctl start docker
sudo chown "$USER":"$USER" /home/"$USER"/.docker -R
sudo chmod g+rwx "/home/$USER/.docker" -R

# 5th stage

swapoff --a
systemctl restart docker && systemctl enable docker
systemctl  restart kubelet && systemctl enable kubelet


                                                    
# 6th stage
# Install prerequisites
yum-config-manager --add-repo=https://cbs.centos.org/repos/paas7-crio-115-release/x86_64/os/
# Install CRI-O
yum -y install --nogpgcheck cri-o
systemctl daemon-reload
systemctl start crio

cat > /etc/modules-load.d/containerd.conf <<EOF2
overlay
br_netfilter
EOF2

modprobe overlay
modprobe br_netfilter
sysctl --system

